[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "nrn-patch"
authors = [{ name = "Robin De Schepper", email = "robingilbert.deschepper@unipv.it" }]
readme = "README.md"
license = { file = "LICENSE" }
classifiers = [
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
]
dynamic = ["version", "description"]
python_requires = ">=3.9"
dependencies = [
    "nmodl-glia[neuron]~=4.0",
    "errr~=1.2",
    "numpy~=1.21",
    "NEURON>=8.0,<10.0",
]

[project.urls]
Home = "https://github.com/dbbs-lab/patch"

[project.entry-points."glia.package"]
extensions = "patch.extensions:package"

[project.optional-dependencies]
parallel = ["mpi4py~=3.0"]
test = [
    "coverage~=7.0"
]
docs = [
    "sphinx~=7.2",
    "helveg--sphinx-code-tabs~=0.2",
    "sphinx-rtd-theme~=2.0",
]
dev = [
    "nrn-patch[test, docs]",
    "pre-commit~=3.0",
    "black~=24.0",
]

[tool.flit.module]
name = "patch"

[tool.black]
line-length = 90

[tool.isort]
profile = "black"

[tool.bumpversion]
current_version = "4.0.0"
parse = """(?x)
    (?P<major>0|[1-9]\\d*)\\.
    (?P<minor>0|[1-9]\\d*)\\.
    (?P<patch>0|[1-9]\\d*)
    (?:
        -                             # dash seperator for pre-release section
        (?P<pre_l>[a-zA-Z-]+)         # pre-release label
        (?P<pre_n>0|[1-9]\\d*)        # pre-release version number
    )?                                # pre-release section is optional
"""
serialize = [
    "{major}.{minor}.{patch}-{pre_l}{pre_n}",
    "{major}.{minor}.{patch}",
]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = true
message = "Bump version: {current_version} → {new_version}"
commit_args = "--no-verify"

[tool.bumpversion.parts.pre_l]
values = ["dev", "a", "b", "rc", "final"]
optional_value = "final"

[[tool.bumpversion.files]]
filename = "patch/__init__.py"